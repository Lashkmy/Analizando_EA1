name: CI/CD Docker Scraper

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}

    steps:
      - name: Paso 1 - Clonar repositorio
        uses: actions/checkout@v4

      - name: Paso 1.1 - Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Paso 1.2 - Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Paso 1.3 - Ejecutar scraper, generar CSV/Excel, y mandar la auditoria al correo electronico.
        run: python src/SensaCineScraper.py

      - name: Paso 1.4 - Subir archivos como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: mejores-peliculas
          path: |
            static/mejores_peliculas.csv
            static/mejores_peliculas.xlsx

      - name: Paso 2 - Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Paso 3 - Construir imagen Docker (con el CSV ya generado)
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sensacine-scraper:latest .

      - name: Paso 4 - Subir imagen a Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sensacine-scraper:latest